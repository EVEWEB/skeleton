{"id":"node_modules/helmet-csp/lib/check-options/index.js","dependencies":[{"name":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/package.json","includedInParent":true,"mtime":1552902201721},{"name":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/package.json","includedInParent":true,"mtime":1552902200678},{"name":"./check-directive","loc":{"line":1,"column":29},"parent":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/lib/check-options/index.js","resolved":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/lib/check-options/check-directive/index.js"},{"name":"dasherize","loc":{"line":2,"column":24},"parent":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/lib/check-options/index.js","resolved":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/dasherize/index.js"}],"generated":{"js":"var checkDirective = require('./check-directive')\nvar dasherize = require('dasherize')\n\nmodule.exports = function (options) {\n  if (!isObject(options)) {\n    throw new Error('csp must be called with an object argument. See the documentation.')\n  }\n\n  var directives = options.directives\n\n  var directivesExist = isObject(directives)\n  if (!directivesExist || Object.keys(directives).length === 0) {\n    throw new Error('csp must have at least one directive under the \"directives\" key. See the documentation.')\n  }\n\n  Object.keys(directives).forEach(function (directiveKey) {\n    checkDirective(dasherize(directiveKey), directives[directiveKey], options)\n  })\n}\n\nfunction isObject (value) {\n  return Object.prototype.toString.call(value) === '[object Object]'\n}\n","map":{"mappings":[{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"node_modules/helmet-csp/lib/check-options/index.js":"var checkDirective = require('./check-directive')\nvar dasherize = require('dasherize')\n\nmodule.exports = function (options) {\n  if (!isObject(options)) {\n    throw new Error('csp must be called with an object argument. See the documentation.')\n  }\n\n  var directives = options.directives\n\n  var directivesExist = isObject(directives)\n  if (!directivesExist || Object.keys(directives).length === 0) {\n    throw new Error('csp must have at least one directive under the \"directives\" key. See the documentation.')\n  }\n\n  Object.keys(directives).forEach(function (directiveKey) {\n    checkDirective(dasherize(directiveKey), directives[directiveKey], options)\n  })\n}\n\nfunction isObject (value) {\n  return Object.prototype.toString.call(value) === '[object Object]'\n}\n"},"lineCount":24}},"hash":"f3addc15ae04e2b6fc2553bea6212696","cacheData":{"env":{}}}