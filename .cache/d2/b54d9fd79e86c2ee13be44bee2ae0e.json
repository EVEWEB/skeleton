{"id":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","dependencies":[{"name":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/package.json","includedInParent":true,"mtime":1552902201721},{"name":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/package.json","includedInParent":true,"mtime":1552902200678},{"name":"../../is-function","loc":{"line":1,"column":25},"parent":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","resolved":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/lib/is-function.js"},{"name":"../../config","loc":{"line":2,"column":21},"parent":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","resolved":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/lib/config.js"}],"generated":{"js":"var isFunction = require('../../is-function')\nvar config = require('../../config')\n\nmodule.exports = function sourceListCheck (key, value, options) {\n  var directiveInfo = config.directives[key]\n\n  if (value === false) { return }\n\n  if (!Array.isArray(value)) {\n    throw new Error('\"' + value + '\" is not a valid value for ' + key + '. Use an array of strings.')\n  }\n\n  if (value.length === 0) {\n    throw new Error(key + ' must have at least one value. To block everything, set ' + key + ' to [\"\\'none\\'\"].')\n  }\n\n  value.forEach(function (sourceExpression) {\n    if (!sourceExpression) {\n      throw new Error('\"' + sourceExpression + '\" is not a valid source expression. Only non-empty strings are allowed.')\n    }\n\n    if (isFunction(sourceExpression)) { return }\n\n    sourceExpression = sourceExpression.valueOf()\n\n    if ((typeof sourceExpression !== 'string') || (sourceExpression.length === 0)) {\n      throw new Error('\"' + sourceExpression + '\" is not a valid source expression. Only non-empty strings are allowed.')\n    }\n\n    if ((!directiveInfo.hasUnsafes && (config.unsafes.indexOf(sourceExpression) !== -1)) ||\n      (!directiveInfo.hasStrictDynamic && (config.strictDynamics.indexOf(sourceExpression) !== -1))) {\n      throw new Error('\"' + sourceExpression + '\" does not make sense in ' + key + '. Remove it.')\n    }\n\n    if (config.mustQuote.indexOf(sourceExpression) !== -1) {\n      throw new Error('\"' + sourceExpression + '\" must be quoted in ' + key + '. Change it to \"\\'' + sourceExpression + '\\'\" in your source list. Force this by enabling loose mode.')\n    }\n  })\n}\n","map":{"mappings":[{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/helmet-csp/lib/check-options/check-directive/source-list.js":"var isFunction = require('../../is-function')\nvar config = require('../../config')\n\nmodule.exports = function sourceListCheck (key, value, options) {\n  var directiveInfo = config.directives[key]\n\n  if (value === false) { return }\n\n  if (!Array.isArray(value)) {\n    throw new Error('\"' + value + '\" is not a valid value for ' + key + '. Use an array of strings.')\n  }\n\n  if (value.length === 0) {\n    throw new Error(key + ' must have at least one value. To block everything, set ' + key + ' to [\"\\'none\\'\"].')\n  }\n\n  value.forEach(function (sourceExpression) {\n    if (!sourceExpression) {\n      throw new Error('\"' + sourceExpression + '\" is not a valid source expression. Only non-empty strings are allowed.')\n    }\n\n    if (isFunction(sourceExpression)) { return }\n\n    sourceExpression = sourceExpression.valueOf()\n\n    if ((typeof sourceExpression !== 'string') || (sourceExpression.length === 0)) {\n      throw new Error('\"' + sourceExpression + '\" is not a valid source expression. Only non-empty strings are allowed.')\n    }\n\n    if ((!directiveInfo.hasUnsafes && (config.unsafes.indexOf(sourceExpression) !== -1)) ||\n      (!directiveInfo.hasStrictDynamic && (config.strictDynamics.indexOf(sourceExpression) !== -1))) {\n      throw new Error('\"' + sourceExpression + '\" does not make sense in ' + key + '. Remove it.')\n    }\n\n    if (config.mustQuote.indexOf(sourceExpression) !== -1) {\n      throw new Error('\"' + sourceExpression + '\" must be quoted in ' + key + '. Change it to \"\\'' + sourceExpression + '\\'\" in your source list. Force this by enabling loose mode.')\n    }\n  })\n}\n"},"lineCount":40}},"hash":"4e45fe032b4ce4c8d8ad5c237fd52e3a","cacheData":{"env":{}}}