{"id":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","dependencies":[{"name":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/package.json","includedInParent":true,"mtime":1552902201721},{"name":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/package.json","includedInParent":true,"mtime":1552902200678},{"name":"./is-function","loc":{"line":1,"column":25},"parent":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/lib/parse-dynamic-directives.js","resolved":"/home/ev/Projects/March2019/expressT/express-locallibrary-tutorial-master/node_modules/helmet-csp/lib/is-function.js"}],"generated":{"js":"var isFunction = require('./is-function')\n\nmodule.exports = function parseDynamicDirectives (directives, functionArgs) {\n  var result = {}\n\n  Object.keys(directives).forEach(function (key) {\n    var value = directives[key]\n\n    if (Array.isArray(value)) {\n      result[key] = value.map(function (element) {\n        if (isFunction(element)) {\n          return element.apply(null, functionArgs)\n        } else {\n          return element\n        }\n      })\n    } else if (isFunction(value)) {\n      result[key] = value.apply(null, functionArgs)\n    } else if (value !== false) {\n      result[key] = value\n    }\n  })\n\n  return result\n}\n","map":{"mappings":[{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/helmet-csp/lib/parse-dynamic-directives.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"node_modules/helmet-csp/lib/parse-dynamic-directives.js":"var isFunction = require('./is-function')\n\nmodule.exports = function parseDynamicDirectives (directives, functionArgs) {\n  var result = {}\n\n  Object.keys(directives).forEach(function (key) {\n    var value = directives[key]\n\n    if (Array.isArray(value)) {\n      result[key] = value.map(function (element) {\n        if (isFunction(element)) {\n          return element.apply(null, functionArgs)\n        } else {\n          return element\n        }\n      })\n    } else if (isFunction(value)) {\n      result[key] = value.apply(null, functionArgs)\n    } else if (value !== false) {\n      result[key] = value\n    }\n  })\n\n  return result\n}\n"},"lineCount":26}},"hash":"07c031af1465a198f03a7396a6e24ead","cacheData":{"env":{}}}